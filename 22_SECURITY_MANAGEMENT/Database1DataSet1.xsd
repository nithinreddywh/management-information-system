<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet1" targetNamespace="http://tempuri.org/Database1DataSet1.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet1.xsd" xmlns="http://tempuri.org/Database1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings._22_SECURITY_MANAGEMENT.My.MySettings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SECURITYTableAdapter" GeneratorDataComponentClassName="SECURITYTableAdapter" Name="SECURITY" UserDataComponentName="SECURITYTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (MySettings)" DbObjectName="dbo.SECURITY" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SECURITY] WHERE (([securityId] = @Original_securityId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_leaves = 1 AND [leaves] IS NULL) OR ([leaves] = @Original_leaves)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_securityId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="securityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_leaves" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_leaves" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SECURITY] ([securityId], [name], [leaves]) VALUES (@securityId, @name, @leaves);
SELECT securityId, name, leaves FROM SECURITY WHERE (securityId = @securityId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@securityId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="securityId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@leaves" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT securityId, name, leaves FROM dbo.SECURITY</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SECURITY] SET [securityId] = @securityId, [name] = @name, [leaves] = @leaves WHERE (([securityId] = @Original_securityId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_leaves = 1 AND [leaves] IS NULL) OR ([leaves] = @Original_leaves)));
SELECT securityId, name, leaves FROM SECURITY WHERE (securityId = @securityId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@securityId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="securityId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@leaves" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_securityId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="securityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_leaves" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_leaves" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="leaves" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="securityId" DataSetColumn="securityId" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="leaves" DataSetColumn="leaves" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Database1DataSet1" msprop:Generator_DataSetName="Database1DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SECURITY" msprop:Generator_RowEvHandlerName="SECURITYRowChangeEventHandler" msprop:Generator_RowDeletedName="SECURITYRowDeleted" msprop:Generator_RowDeletingName="SECURITYRowDeleting" msprop:Generator_RowEvArgName="SECURITYRowChangeEvent" msprop:Generator_TablePropName="SECURITY" msprop:Generator_RowChangedName="SECURITYRowChanged" msprop:Generator_RowChangingName="SECURITYRowChanging" msprop:Generator_TableClassName="SECURITYDataTable" msprop:Generator_RowClassName="SECURITYRow" msprop:Generator_TableVarName="tableSECURITY" msprop:Generator_UserTableName="SECURITY">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="securityId" msprop:Generator_ColumnPropNameInRow="securityId" msprop:Generator_ColumnPropNameInTable="securityIdColumn" msprop:Generator_ColumnVarNameInTable="columnsecurityId" msprop:Generator_UserColumnName="securityId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="leaves" msprop:Generator_ColumnPropNameInRow="leaves" msprop:Generator_ColumnPropNameInTable="leavesColumn" msprop:Generator_ColumnVarNameInTable="columnleaves" msprop:Generator_UserColumnName="leaves" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SECURITY" />
      <xs:field xpath="mstns:securityId" />
    </xs:unique>
  </xs:element>
</xs:schema>